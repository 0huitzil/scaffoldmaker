"""
Generates a 3-D gastrointestinal tract mesh along the central line,
with variable numbers of elements around, along and through
wall, with variable radius and thickness along.
"""

import copy

from cmlibs.utils.zinc.field import findOrCreateFieldCoordinates
from cmlibs.zinc.field import Field
from cmlibs.zinc.node import Node
from scaffoldmaker.annotation.annotationgroup import mergeAnnotationGroups, getAnnotationGroupForTerm
from scaffoldmaker.annotation.cecum_terms import get_cecum_term
from scaffoldmaker.annotation.colon_terms import get_colon_term
from scaffoldmaker.annotation.esophagus_terms import get_esophagus_term
from scaffoldmaker.annotation.smallintestine_terms import get_smallintestine_term
from scaffoldmaker.annotation.stomach_terms import get_stomach_term
from scaffoldmaker.meshtypes.meshtype_1d_network_layout1 import MeshType_1d_network_layout1
from scaffoldmaker.meshtypes.meshtype_3d_cecum1 import MeshType_3d_cecum1, createCecumMesh3d, CecumNetworkLayout
from scaffoldmaker.meshtypes.meshtype_3d_colon1 import MeshType_3d_colon1, createColonMesh3d, ColonNetworkLayout
from scaffoldmaker.meshtypes.meshtype_3d_esophagus1 import MeshType_3d_esophagus1, createEsophagusMesh3d, \
    EsophagusNetworkLayout
from scaffoldmaker.meshtypes.meshtype_3d_smallintestine1 import MeshType_3d_smallintestine1, \
    createSmallIntestineMesh3d, SmallIntestineNetworkLayout
from scaffoldmaker.meshtypes.meshtype_3d_stomach1 import MeshType_3d_stomach1, createStomachMesh3d, StomachNetworkLayout
from scaffoldmaker.meshtypes.scaffold_base import Scaffold_base
from scaffoldmaker.scaffoldpackage import ScaffoldPackage
from scaffoldmaker.utils import interpolation as interp
from scaffoldmaker.utils.zinc_utils import exnode_string_from_nodeset_field_parameters


def getDefaultNetworkLayoutScaffoldPackage(cls, parameterSetName):
    assert parameterSetName in cls.getParameterSetNames() # make sure parameter set is in list of parameters of parent scaffold
    if parameterSetName in ("Default", "Human 1"):
        return ScaffoldPackage(MeshType_1d_network_layout1, {
            'scaffoldSettings': {
                "Structure": "1-2-3-4-5-6-7.2, 8-9-10-11-7-12-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-"
                             "32-33-34-35-36-37-38-39-40-41-42-43-44-45-46-47-48-49-50-51-52-53-54-55-56-57-58-59-60-"
                             "61-62-63-64-65-66-67-68-69-70-71-72-73-74-75-76-77-78-79-80-81-82-83-84-85-86-87-88-89-"
                             "90-91-92-93-94-95-96-97-98-99-100-101-102-103-104-105-106-107-108-109-110-111-112-113-"
                             "114-115-116-117-118-119-120-121-122-123-124-125-126-127-128-129-130-131-132-133-134-135-"
                             "136-137-138-139-140-141-142-143-144-145-146-147-148-149-150-151-152-153-154-155-156-157-"
                             "158-159-160-161-162-163-164-165-166-167-168-169-170-171-172.2, 173-172-174-175-176-177-"
                             "178-179-180-181-182-183-184-185-186-187-188-189-190-191-192-193-194-195-196-197-198-199-"
                             "200-201-202-203-204-205-206-207-208-209-210-211-212-213-214-215-216-217-218-219-220-221-"
                             "222"
            },
            'meshEdits': exnode_string_from_nodeset_field_parameters(
                ['coordinates'],
                [ Node.VALUE_LABEL_VALUE, Node.VALUE_LABEL_D_DS1, Node.VALUE_LABEL_D_DS2, Node.VALUE_LABEL_D2_DS1DS2, Node.VALUE_LABEL_D_DS3, Node.VALUE_LABEL_D2_DS1DS3], [[
                (1, [[0.394,-100.872,1402.818], [-0.035,12.367,-48.020], [8.730,-0.526,-0.142], [0.645,-0.149,-0.084], [-0.272,-4.224,-1.088], [-0.172,-1.936,0.474]]),
                (2, [[0.520,-86.043,1340.066], [0.501,16.682,-77.602], [9.142,-0.799,-0.113], [0.176,-0.353,-0.027], [-0.465,-5.159,-1.112], [-0.217,0.101,-0.821]]),
                (3, [[1.368,-67.733,1247.932], [0.235,-3.685,-89.672], [9.061,-1.366,0.080], [-0.816,-0.266,0.913], [-0.714,-4.722,0.192], [-0.191,0.388,4.146]]),
                (4, [[0.361,-91.057,1165.531], [-2.499,-24.560,-49.102], [7.540,-1.290,0.261], [-1.321,2.063,3.911], [-0.806,-4.269,2.176], [0.019,0.649,0.615]]),
                (5, [[8.225,-110.042,1130.494], [17.674,-15.065,-22.956], [6.092,0.940,4.074], [1.229,3.363,5.229], [-0.669,-3.559,1.821], [0.256,-3.730,2.087]]), # stomach
                (6, [[27.268,-119.049,1120.363], [29.345,-6.635,-5.589], [3.536,6.355,11.021], [-4.563,2.025,2.177], [-1.229,-11.215,6.861], [1.619,-4.227,2.277]]),
                (7, [[63.704,-120.094,1123.374], [[0.842,-9.011,-13.227],[41.742,4.358,11.135]], [[37.708,-3.017,4.455],[-3.481,6.664,10.443]], [[1.955,-0.619,-0.927],[1.246,-0.837,-1.425]], [[-5.447,-34.193,22.949],[-0.678,-11.218,6.933]], [[-0.269,-2.561,2.982],[-1.558,4.051,-2.388]]]),
                (8, [[61.247,-99.931,1152.681], [0.427,-3.349,-4.397], [11.314,-0.313,1.337], [16.186,-3.105,3.004], [-0.672,-5.774,4.333], [-3.234,-9.056,7.808]]),
                (9, [[61.743,-103.510,1147.760], [0.565,-3.807,-5.444], [24.118,-2.068,3.951], [9.485,-0.404,2.240], [-2.996,-15.211,10.328], [-1.475,-9.388,4.780]]),
                (10, [[62.381,-107.527,1141.785], [0.559,-4.813,-7.053], [30.505,-2.333,4.010], [5.777,-1.924,-2.194], [-3.842,-23.362,15.637], [-0.957,-6.170,6.414]]),
                (11, [[62.800,-113.150,1133.665], [0.642,-6.292,-9.204], [35.350,-2.675,4.295], [3.358,1.888,3.501], [-4.676,-29.711,19.984], [-0.685,-6.454,2.135]]),
                (12, [[64.339,-131.197,1107.233], [-0.327,-11.961,-17.331], [39.197,-4.146,2.121], [-1.413,0.507,0.138], [-5.109,-35.662,24.710], [0.316,-0.518,0.671]]),
                (13, [[62.912,-143.954,1088.811], [-5.607,-12.396,-18.044], [34.482,-8.485,-4.886], [-6.065,-6.479,-11.671], [-4.921,-34.543,25.260], [1.721,3.665,0.276]]),
                (14, [[53.361,-155.397,1072.006], [-15.827,-9.773,-15.483], [25.119,-13.915,-16.894], [-19.643,-7.564,-13.701], [-2.356,-30.712,21.794], [-0.170,4.599,-5.192]]),
                (15, [[32.110,-162.230,1059.680], [-22.173,-3.681,-8.142], [10.068,-16.126,-20.126], [-12.488,0.413,0.532], [-2.559,-23.629,17.653], [1.057,6.496,-3.159]]),
                (16, [[10.560,-162.970,1055.650], [-20.956,2.164,-0.908], [-0.697,-13.976,-17.241], [-8.999,3.378,5.491], [-2.502,-18.048,14.732], [1.647,5.538,-1.785]]),
                (17, [[-8.740,-158.280,1057.630], [-17.269,8.027,2.588], [-6.253,-10.164,-10.200], [-3.575,5.519,6.887], [-3.442,-11.913,13.981], [-3.280,8.069,-2.019]]),
                (18, [[-23.260,-147.620,1060.640], [-11.776,11.361,1.718], [-5.807,-5.321,-4.621], [1.528,2.286,2.595], [-3.207,-4.763,9.515], [-0.837,5.004,-3.547]]),
                (19, [[-32.281,-136.261,1061.249], [-8.825,12.725,0.137], [-5.485,-3.752,-4.834], [-0.599,1.952,0.267], [-4.191,-2.983,7.070], [0.644,-1.559,-1.898]]), # small intestine
                (20, [[-40.674,-122.300,1060.850], [-5.403,7.321,-2.629], [-4.779,-4.249,-5.161], [3.651,-4.418,0.159], [-5.138,-1.668,6.875], [-3.357,4.183,-1.796]]),
                (21, [[-48.346,-108.981,1049.574], [-6.840,19.440,-21.940], [-3.459,-4.108,-5.699], [1.981,-4.646,2.964], [-7.043,0.777,3.341], [0.467,1.465,0.845]]),
                (22, [[-43.450,-95.700,1015.590], [40.730,3.220,-44.800], [-5.240,-3.340,-4.990], [5.224,2.176,-8.485], [-2.270,6.020,-1.640], [14.023,0.298,-3.590]]),
                (23, [[26.760,-119.310,992.030], [58.860,-18.680,-8.450], [0.310,3.940,-6.600], [3.515,0.238,0.736], [2.230,5.490,3.380], [-5.833,-1.266,0.931]]),
                (24, [[63.862,-132.266,992.002], [9.680,-30.910,-18.900], [5.846,1.916,2.960], [10.918,-35.306,0.336], [5.300,-1.090,4.490], [-7.639,-25.231,-3.687]]),
                (25, [[46.280,-139.940,982.680], [-22.680,-4.850,-10.940], [1.050,-7.060,0.970], [3.333,-2.089,-0.532], [-3.190,0.420,6.420], [-0.077,-8.625,-3.167]]),
                (26, [[28.560,-141.070,974.610], [3.750,-10.520,-21.300], [1.560,-6.210,3.340], [-1.641,1.661,4.817], [-6.850,-1.870,-0.290], [2.487,-7.205,-29.605]]),
                (27, [[52.390,-146.130,971.400], [18.400,-3.700,0.670], [-1.440,-7.110,0.300], [-3.251,0.543,-0.459], [0.190,-0.340,-7.250], [-0.715,-1.683,-1.332]]),
                (28, [[63.130,-148.180,973.520], [10.490,-1.410,1.470], [-1.070,-7.160,0.770], [-0.417,0.700,-2.160], [0.880,-0.900,-7.160], [-0.717,-2.754,1.221]]),
                (29, [[72.690,-148.910,974.300], [7.650,3.570,-7.080], [3.500,-6.340,0.580], [9.585,4.612,-12.058], [-3.880,-2.630,-5.520], [-13.500,-3.573,8.429]]),
                (30, [[71.050,-143.650,964.650], [-5.960,4.700,-11.040], [-0.810,-6.830,-2.470], [2.756,-0.926,3.468], [-6.400,-0.430,3.270], [0.024,2.912,-0.830]]),
                (31, [[61.060,-140.780,954.520], [-17.960,3.880,-6.220], [-1.070,-7.120,-1.370], [-2.993,0.150,0.852], [-2.560,-0.940,6.800], [10.275,-0.620,2.841]]),
                (32, [[37.990,-136.930,957.170], [-18.820,0.880,5.080], [-0.160,-7.340,0.670], [0.587,-0.002,1.337], [1.940,0.610,7.070], [1.747,0.860,-0.190]]),
                (33, [[24.260,-138.060,963.160], [-17.400,-6.040,8.510], [2.590,-6.900,0.380], [2.635,0.947,0.308], [2.780,1.420,6.690], [2.354,-1.475,-3.317]]),
                (34, [[6.500,-150.310,973.050], [-8.250,-16.440,-13.420], [4.890,-4.750,2.820], [-6.601,-3.283,5.087], [-4.820,-1.850,5.240], [-8.286,-35.633,-25.828]]),
                (35, [[15.970,-149.800,957.690], [-4.350,-1.250,-14.050], [0.990,-7.390,0.350], [-6.201,-1.377,3.090], [-6.950,-0.830,2.230], [7.929,-18.994,26.218]]),
                (36, [[8.290,-150.980,954.250], [-3.340,-0.730,-8.150], [1.180,-7.370,0.180], [0.715,0.083,-0.662], [-6.710,-1.000,2.840], [-21.302,-2.503,-18.189]]),
                (37, [[10.770,-150.880,946.760], [5.270,-0.050,-7.150], [1.370,-7.280,1.060], [-1.812,-0.014,1.845], [-5.800,-1.710,-4.270], [0.506,0.422,-1.398]]),
                (38, [[18.300,-151.090,941.260], [7.790,0.880,-2.390], [0.880,-7.450,0.160], [3.628,0.394,-2.430], [-2.150,-0.400,-7.160], [5.119,1.374,-1.824]]),
                (39, [[24.850,-149.580,941.590], [5.320,0.620,3.020], [1.330,-7.350,-0.840], [-2.188,-0.468,-1.267], [3.510,1.370,-6.460], [9.483,1.523,6.603]]),
                (40, [[27.850,-149.810,945.920], [3.490,-0.550,3.990], [0.330,-7.390,-1.300], [-1.106,0.140,-0.939], [5.610,1.090,-4.760], [-1.254,0.106,-2.929]]),
                (41, [[31.640,-150.640,949.370], [5.770,-0.500,1.810], [-0.280,-7.430,-1.160], [0.534,-0.121,0.552], [2.310,1.020,-7.080], [-8.118,-0.083,-2.695]]),
                (42, [[38.160,-150.550,948.480], [5.400,1.270,-4.340], [1.280,-7.400,-0.560], [3.319,0.668,-1.870], [-4.630,-0.350,-5.870], [-8.285,-2.450,6.462]]),
                (43, [[40.300,-148.530,942.170], [-0.500,2.450,-7.550], [2.420,-6.730,-2.350], [0.878,0.475,-0.862], [-7.020,-2.420,-0.320], [4.971,-2.516,11.242]]),
                (44, [[36.760,-146.190,935.090], [3.270,5.380,-6.440], [4.320,-5.620,-2.500], [1.897,-2.052,6.042], [-5.500,-2.170,-4.600], [8.012,15.691,-19.733]]),
                (45, [[44.600,-142.080,934.770], [8.650,3.530,1.100], [2.850,-7.000,0.020], [-0.586,-0.344,1.408], [0.830,0.310,-7.530], [-0.298,1.267,-1.349]]),
                (46, [[53.340,-139.440,937.210], [8.310,2.340,2.220], [2.150,-7.250,-0.380], [0.511,0.117,-0.046], [1.710,0.890,-7.340], [-0.826,0.240,-0.248]]),
                (47, [[61.180,-137.390,939.220], [8.230,1.720,1.430], [1.690,-7.360,-0.860], [-1.537,-0.317,-0.400], [1.060,1.120,-7.440], [-1.323,-0.183,-0.240]]),
                (48, [[69.720,-136.030,940.040], [8.420,1.510,0.050], [1.350,-7.460,-0.740], [-1.038,0.147,-1.681], [-0.090,0.740,-7.580], [5.814,-1.220,2.427]]),
                (49, [[77.280,-134.500,939.340], [4.490,4.180,-8.530], [2.310,-6.920,-2.180], [-0.144,1.324,-4.217], [-6.410,-0.930,-3.830], [-11.527,-8.875,23.126]]),
                (50, [[71.890,-131.270,929.110], [-6.780,1.090,-6.790], [0.090,-7.530,-1.300], [0.497,-0.344,1.969], [-5.410,-0.970,5.250], [4.216,-0.611,4.824]]),
                (51, [[66.110,-131.600,925.900], [-4.090,-0.450,-4.440], [0.540,-7.640,0.280], [-2.557,-0.246,-0.155], [-5.560,-0.210,5.140], [-11.298,-1.105,-11.185]]),
                (52, [[63.930,-132.090,921.070], [-3.930,-1.160,-4.370], [0.320,-7.470,1.700], [0.872,0.414,2.066], [-5.720,0.870,4.920], [6.970,2.000,9.448]]),
                (53, [[58.470,-133.890,917.960], [-6.670,-3.360,-3.670], [2.290,-6.970,2.210], [1.922,0.457,-0.936], [-3.960,0.750,6.500], [-3.022,-2.138,-1.687]]),
                (54, [[51.020,-139.090,914.020], [-6.630,-6.740,0.390], [5.400,-5.250,1.130], [5.189,5.610,-3.149], [-0.590,1.020,7.590], [9.900,8.305,-0.073]]),
                (55, [[46.770,-145.490,918.120], [-5.050,-4.370,2.870], [4.810,-5.920,-0.550], [-4.537,-4.534,2.874], [2.680,1.520,7.030], [-2.541,-6.567,3.716]]),
                (56, [[41.950,-147.920,919.780], [-5.030,-2.380,1.940], [2.900,-7.030,-1.100], [1.707,0.661,-1.111], [2.770,0.010,7.180], [3.397,0.274,-1.156]]),
                (57, [[36.760,-150.210,922.000], [-5.100,-1.680,1.580], [2.030,-7.330,-1.240], [-1.487,-0.627,1.056], [2.440,-0.560,7.300], [-3.889,-0.681,1.215]]),
                (58, [[31.890,-151.330,922.990], [-5.710,-1.250,1.560], [1.770,-7.500,0.460], [1.421,0.329,-0.358], [1.840,0.880,7.450], [5.506,2.415,-3.231]]),
                (59, [[25.550,-152.650,925.180], [-6.280,-0.560,-2.170], [0.700,-7.710,-0.030], [-2.589,-0.232,-1.558], [-2.500,-0.250,7.310], [-21.163,-2.266,-8.414]]),
                (60, [[22.170,-152.270,920.060], [-4.850,0.300,-4.200], [0.270,-7.700,-0.850], [0.102,-0.136,0.801], [-5.020,-0.810,5.760], [2.878,-1.027,5.470]]),
                (61, [[16.600,-152.110,917.510], [-6.970,0.000,2.680], [0.200,-7.740,0.510], [2.022,0.050,-1.069], [2.770,0.540,7.210], [20.756,1.019,-10.605]]),
                (62, [[13.120,-152.320,924.900], [-3.730,0.410,7.150], [-0.450,-7.750,0.210], [-0.173,0.185,2.805], [6.780,-0.300,3.550], [0.255,-1.245,-0.078]]),
                (63, [[9.440,-151.370,931.310], [-7.880,0.190,2.810], [-0.130,-7.780,0.170], [3.371,-0.191,-1.138], [2.610,0.120,7.310], [-22.228,0.870,6.117]]),
                (64, [[1.230,-152.170,928.310], [-8.130,-0.720,-1.080], [0.620,-7.760,0.490], [-0.141,-0.087,-0.536], [-1.060,0.400,7.710], [5.931,0.903,2.916]]),
                (65, [[-5.970,-152.740,928.930], [-5.640,-0.310,4.390], [0.170,-7.800,-0.330], [-1.262,-0.047,-0.189], [4.760,-0.160,6.120], [10.597,-0.498,-7.465]]),
                (66, [[-8.050,-152.700,935.120], [0.840,0.430,7.280], [-1.310,-7.670,0.600], [-0.068,0.013,1.173], [7.520,-1.340,-0.790], [-10.464,0.164,-14.369]]),
                (67, [[-4.180,-151.980,940.930], [-5.500,2.850,8.020], [-2.070,-7.440,1.220], [-0.498,-0.713,-3.796], [6.170,-0.960,4.570], [-16.817,11.867,27.608]]),
                (68, [[-15.920,-150.230,939.850], [-11.530,2.830,0.080], [-1.870,-7.620,-0.020], [-1.465,0.005,-0.653], [0.040,-0.030,7.840], [0.895,-0.506,0.641]]),
                (69, [[-25.870,-146.770,940.970], [-2.690,4.150,9.230], [-1.800,-7.150,2.690], [1.302,-0.852,-2.190], [7.250,-0.880,2.510], [9.759,-9.779,-31.462]]),
                (70, [[-19.430,-146.580,946.990], [7.700,1.830,5.130], [-0.490,-7.140,3.290], [8.114,0.343,1.461], [4.500,-2.940,-5.700], [3.775,-1.079,0.002]]),
                (71, [[-11.610,-143.430,950.540], [5.250,2.520,5.680], [0.830,-7.420,2.520], [-2.696,-1.935,-3.783], [5.910,-1.040,-5.000], [8.402,5.914,8.776]]),
                (72, [[-9.220,-141.820,956.880], [3.600,1.580,5.200], [1.220,-7.660,1.480], [0.362,0.154,0.750], [6.390,0.150,-4.470], [-6.045,-2.334,-10.553]]),
                (73, [[-4.880,-140.390,960.700], [3.780,1.360,4.900], [0.780,-7.720,1.540], [0.449,0.032,-0.198], [6.230,-0.310,-4.720], [3.117,1.056,3.067]]),
                (74, [[-1.980,-139.200,966.470], [0.650,0.130,7.290], [1.420,-7.780,0.010], [0.727,0.291,-4.068], [7.610,1.390,-0.700], [0.114,-0.130,11.855]]),
                (75, [[-4.150,-140.360,973.960], [-2.380,-0.650,10.170], [1.190,-7.830,-0.220], [-1.576,-0.154,-0.230], [7.500,1.090,1.830], [1.627,0.382,-4.935]]),
                (76, [[-6.206,-140.381,984.826], [-3.997,1.953,8.625], [-0.240,-7.940,-0.400], [-2.423,-0.160,4.258], [7.090,-0.380,3.280], [-1.902,-1.277,5.450]]),
                (77, [[-11.071,-137.239,990.534], [-6.502,2.564,3.616], [-0.730,-7.850,-1.030], [3.886,-0.355,-2.121], [4.330,-1.250,6.510], [-4.716,0.115,2.955]]),
                (78, [[-18.114,-135.562,991.751], [-6.821,0.865,-0.438], [-0.170,-7.940,-0.730], [-0.329,-0.092,0.704], [-0.320,-0.720,7.930], [-4.030,0.807,-0.046]]),
                (79, [[-24.108,-135.469,989.949], [-5.560,-1.043,-2.740], [0.530,-7.940,0.630], [0.016,0.223,1.611], [-4.270,0.240,6.690], [-1.614,1.193,-1.143]]),
                (80, [[-28.764,-137.545,986.518], [-3.033,-3.486,-4.184], [-0.280,-7.620,2.380], [1.974,2.391,5.904], [-7.020,1.290,3.320], [-3.325,-0.295,-5.800]]),
                (81, [[-29.636,-141.811,982.334], [1.634,-2.756,-5.189], [-2.170,-7.290,2.440], [-0.593,-2.026,-4.265], [-7.100,1.030,-3.250], [5.736,-4.475,-8.477]]),
                (82, [[-24.820,-145.190,978.580], [4.650,-2.180,-4.590], [-2.130,-7.580,1.440], [1.312,-0.693,-1.321], [-5.460,0.450,-5.750], [-0.791,0.551,0.481]]),
                (83, [[-20.750,-146.910,974.010], [1.230,-0.700,-6.940], [-1.580,-7.840,0.510], [0.432,-0.233,-2.696], [-7.590,1.430,-1.480], [-2.833,1.475,12.852]]),
                (84, [[-23.390,-146.100,967.330], [-6.320,1.650,-4.010], [-2.030,-7.760,0.010], [1.100,-0.303,1.293], [-4.040,1.070,6.800], [12.749,-2.278,7.527]]),
                (85, [[-30.600,-144.330,967.780], [-6.690,2.040,2.190], [-1.930,-7.690,1.270], [-1.094,0.418,1.097], [2.650,0.580,7.550], [4.641,-1.541,-1.897]]),
                (86, [[-36.170,-142.250,971.340], [-6.590,1.940,2.270], [-1.940,-7.730,1.010], [1.337,-0.375,-0.251], [2.700,0.310,7.560], [-10.302,3.022,3.417]]),
                (87, [[-43.400,-140.590,972.070], [-6.040,1.970,2.740], [-1.830,-7.710,1.480], [0.862,0.031,0.700], [3.470,0.560,7.230], [9.057,-1.970,-2.990]]),
                (88, [[-47.620,-138.630,976.140], [-1.780,2.680,4.620], [-1.870,-7.070,3.390], [-1.334,3.029,5.423], [7.300,-0.460,3.080], [2.858,-3.702,-7.469]]),
                (89, [[-47.100,-135.980,980.160], [0.980,1.950,4.050], [-1.830,-6.900,3.760], [-1.714,-2.206,-4.397], [7.550,-2.370,-0.680], [0.416,0.834,-0.916]]),
                (90, [[-45.780,-134.750,984.020], [1.920,1.940,5.580], [-1.460,-7.340,3.050], [2.544,1.112,4.403], [7.430,-2.220,-1.790], [-4.135,-3.735,-4.385]]),
                (91, [[-42.419,-130.149,990.122], [-1.920,7.780,7.360], [-3.780,-5.370,4.690], [-4.130,0.225,-2.136], [6.910,-1.720,3.610], [-1.973,9.490,8.238]]),
                (92, [[-48.414,-118.983,992.238], [-8.280,6.980,-7.760], [-5.960,-5.080,1.790], [7.223,-3.668,5.625], [-2.030,4.630,6.340], [-20.516,5.128,-13.510]]),
                (93, [[-54.520,-122.570,980.900], [-5.100,0.460,-13.050], [-2.600,-7.660,0.750], [-1.021,-1.982,-15.107], [-7.020,2.660,2.840], [-1.113,2.044,-0.188]]),
                (94, [[-56.534,-121.929,967.273], [-3.400,-6.950,-12.830], [-2.036,-6.714,3.150], [0.966,7.851,17.521], [-7.800,0.860,1.600], [-0.378,4.188,2.059]]),
                (95, [[-57.601,-134.069,961.014], [4.440,-11.120,-4.920], [-6.170,-3.970,3.410], [1.703,-4.812,-0.406], [-4.460,1.190,-6.700], [3.498,1.942,-0.392]]),
                (96, [[-53.650,-142.090,958.040], [8.150,-8.950,-3.450], [-4.950,-5.680,3.060], [2.469,-2.183,-0.548], [-3.750,-0.620,-7.230], [2.151,-4.257,0.349]]),
                (97, [[-43.780,-150.900,953.550], [6.860,-6.210,-10.820], [-1.570,-7.380,3.240], [4.140,-3.716,-3.970], [-6.930,-0.360,-4.180], [-4.436,1.961,4.286]]),
                (98, [[-42.790,-151.920,940.920], [-10.160,7.350,-12.870], [-4.740,-6.680,-0.070], [-0.411,0.618,1.814], [-4.810,3.350,5.710], [19.507,-12.349,13.602]]),
                (99, [[-59.560,-139.320,940.870], [-10.470,7.530,-10.550], [-4.670,-6.770,-0.210], [-0.466,0.413,0.196], [-4.390,2.820,6.370], [-16.996,14.783,-8.415]]),
                (100, [[-61.190,-138.430,930.230], [-0.370,-2.040,-12.190], [-5.970,-5.520,1.110], [-1.166,1.633,3.357], [-5.640,5.920,-0.830], [0.187,0.070,6.674]]),
                (101, [[-60.050,-143.370,918.840], [6.120,-9.410,-3.110], [-6.440,-4.780,1.790], [-1.451,1.044,-3.117], [-2.750,0.780,-7.780], [16.440,-26.819,-5.273]]),
                (102, [[-54.810,-148.970,924.540], [7.070,-6.600,2.050], [-5.610,-6.050,-0.170], [0.613,-0.456,-1.537], [1.380,-1.050,-8.130], [-11.489,7.073,-8.831]]),
                (103, [[-48.000,-154.670,922.570], [3.540,-3.720,-7.480], [-4.830,-6.610,1.000], [1.642,-0.900,2.367], [-5.850,3.580,-4.550], [-7.555,8.087,21.424]]),
                (104, [[-49.390,-154.510,914.460], [0.270,0.350,-10.670], [-3.110,-7.640,-0.330], [1.453,-0.776,2.379], [-7.540,3.070,-0.100], [2.006,3.030,2.381]]),
                (105, [[-46.730,-154.010,904.000], [18.990,-1.890,-1.480], [-0.780,-8.190,0.400], [-1.565,0.189,2.926], [-0.670,-0.340,-8.190], [37.590,-6.357,2.098]]),
                (106, [[-31.900,-157.000,923.200], [20.270,-2.840,5.710], [-1.280,-8.040,0.540], [-0.053,0.074,1.783], [2.100,-0.860,-7.850], [-16.958,3.080,-11.264]]),
                (107, [[-17.040,-158.470,917.330], [10.690,1.600,-10.940], [1.940,-7.840,0.740], [2.022,0.995,-8.129], [-5.440,-1.880,-5.580], [-1.158,-4.419,9.211]]),
                (108, [[-12.920,-154.880,905.590], [14.280,1.560,-5.120], [1.010,-8.000,0.370], [-6.741,-1.242,2.330], [-2.650,-0.690,-7.580], [25.931,3.069,-6.557]]),
                (109, [[0.790,-157.220,913.220], [17.050,-0.100,-3.500], [-0.160,-8.010,-0.530], [2.324,-0.494,1.895], [-1.610,0.550,-7.830], [-27.990,3.634,7.078]]),
                (110, [[11.370,-154.850,899.810], [20.470,4.340,-7.040], [1.620,-7.800,-0.100], [-1.391,-0.231,0.965], [-2.500,-0.420,-7.540], [21.377,6.167,-6.362]]),
                (111, [[35.280,-149.960,905.730], [15.010,5.710,-13.200], [0.800,-7.500,-2.330], [-0.206,-0.198,1.829], [-5.360,1.170,-5.590], [-21.509,11.725,26.953]]),
                (112, [[31.510,-148.900,893.070], [11.510,6.020,-14.640], [3.170,-7.130,-0.440], [-0.211,-0.632,4.336], [-5.440,-2.110,-5.150], [4.058,26.279,-26.103]]),
                (113, [[53.210,-142.180,892.150], [16.130,8.560,4.600], [3.960,-6.330,-2.130], [6.900,3.466,3.711], [0.580,2.810,-7.250], [2.866,1.335,-0.204]]),
                (114, [[61.915,-135.512,899.756], [10.425,5.807,7.557], [4.220,-6.470,0.220], [-2.589,-2.264,-2.035], [2.810,1.590,-7.040], [0.601,-0.410,3.491]]),
                (115, [[72.652,-131.499,906.138], [13.270,2.580,-11.410], [1.590,-7.520,0.150], [-1.635,0.347,5.429], [-4.770,-1.120,-5.790], [-25.500,-5.607,14.344]]),
                (116, [[70.933,-136.139,889.296], [-12.490,-8.250,-22.650], [3.260,-6.840,0.700], [-2.736,-1.118,-3.387], [-5.890,-2.380,4.110], [0.681,-0.681,-0.142]]),
                (117, [[47.820,-142.630,864.930], [-22.720,-8.470,-7.520], [2.750,-7.000,-0.430], [0.670,0.346,-0.968], [-1.940,-1.200,7.190], [9.231,2.173,4.725]]),
                (118, [[33.710,-147.840,866.620], [-7.310,-5.020,5.800], [3.020,-6.590,-1.880], [0.258,0.130,-1.299], [4.500,0.350,5.980], [-2.306,-6.642,15.868]]),
                (119, [[33.450,-149.550,870.080], [6.660,-2.670,8.620], [1.910,-6.380,-3.460], [-2.651,-0.890,0.662], [5.650,3.480,-3.300], [-9.687,-6.844,10.597]]),
                (120, [[48.500,-149.860,877.560], [8.440,-1.400,10.880], [1.840,-6.880,-2.310], [0.748,-0.263,1.196], [5.590,2.820,-3.970], [3.944,1.381,-0.647]]),
                (121, [[49.170,-151.340,885.880], [-14.130,-2.760,6.710], [0.940,-7.250,-1.010], [-0.043,0.674,-2.881], [3.260,-0.510,6.640], [-26.800,-7.810,4.005]]),
                (122, [[30.330,-151.820,877.700], [-17.160,1.530,-4.960], [0.920,-5.490,-4.890], [-4.086,0.336,-2.440], [-1.940,-4.930,5.180], [-0.144,-0.225,1.277]]),
                (123, [[16.360,-149.060,875.570], [-10.970,1.710,5.380], [-1.800,-6.980,-1.460], [0.288,-0.683,4.670], [2.830,-2.080,6.450], [17.459,-1.095,-11.017]]),
                (124, [[11.690,-148.720,883.920], [-10.140,1.000,8.830], [-0.940,-7.280,-0.260], [0.388,-0.089,1.501], [4.710,-0.800,5.500], [-7.653,1.481,10.799]]),
                (125, [[-3.830,-146.990,890.110], [-14.280,1.090,0.550], [-0.520,-7.220,0.830], [-0.275,0.036,-0.363], [0.340,0.810,7.240], [-10.241,1.001,-0.483]]),
                (126, [[-14.790,-146.520,886.710], [-10.850,0.220,0.510], [-0.160,-7.240,-0.380], [-0.923,0.089,-0.565], [0.330,-0.390,7.230], [11.160,-0.101,1.730]]),
                (127, [[-23.910,-146.550,890.530], [-7.400,-0.950,6.580], [0.980,-7.160,0.070], [-0.081,1.496,-7.165], [4.680,0.690,5.370], [3.077,8.374,-11.031]]),
                (128, [[-28.030,-148.180,898.370], [-13.610,2.900,3.800], [-1.230,-7.020,0.960], [-8.792,1.830,-0.179], [2.040,0.580,6.860], [-21.952,1.750,7.836]]),
                (129, [[-42.020,-140.320,889.270], [-9.930,7.700,-9.680], [-1.440,-6.120,-3.390], [-1.493,1.230,-1.272], [-5.330,-1.240,4.490], [-0.248,-2.436,-0.982]]),
                (130, [[-47.830,-133.820,880.590], [1.670,2.810,-9.020], [0.190,-6.800,-2.080], [1.397,-3.397,10.253], [-6.870,0.170,-1.220], [-0.163,3.644,-13.064]]),
                (131, [[-43.360,-134.640,876.970], [7.370,-1.120,-1.770], [-0.610,-6.830,1.800], [3.750,-1.161,0.598], [-1.840,-1.590,-6.650], [5.189,1.384,0.052]]),
                (132, [[-34.800,-135.760,878.370], [7.330,-0.800,-0.160], [-0.760,-7.020,0.280], [0.954,-0.058,-0.104], [-0.180,-0.260,-7.060], [-1.328,1.684,-0.009]]),
                (133, [[-29.320,-136.240,877.180], [3.390,-0.800,-5.310], [-1.570,-6.870,0.040], [-1.874,0.515,3.560], [-5.670,1.270,-3.820], [-8.885,2.986,18.258]]),
                (134, [[-30.610,-136.870,870.770], [-0.250,-0.250,-5.290], [-1.190,-6.910,0.380], [-1.087,0.020,-2.028], [-6.790,1.180,0.270], [-1.929,-1.130,-1.631]]),
                (135, [[-30.230,-136.860,867.080], [2.790,-0.450,-3.890], [-0.940,-6.950,0.140], [-1.461,0.362,3.589], [-5.570,0.670,-4.070], [2.257,0.250,-4.111]]),
                (136, [[-25.370,-137.760,865.060], [8.760,-0.500,1.850], [-0.440,-6.980,0.180], [2.495,-0.003,1.801], [1.430,-0.270,-6.840], [12.951,1.403,9.064]]),
                (137, [[-17.010,-136.930,873.250], [9.540,-0.880,-1.350], [-0.710,-6.910,-0.470], [-5.163,0.583,-0.199], [-0.920,0.560,-6.870], [-26.162,1.098,-0.687]]),
                (138, [[-14.620,-138.100,867.370], [2.470,-1.150,-8.780], [-1.880,-6.660,0.340], [3.464,0.757,4.444], [-6.320,1.680,-1.990], [5.026,6.204,-2.217]]),
                (139, [[-13.210,-138.670,858.260], [15.020,8.840,-1.860], [3.370,-5.940,-1.020], [5.926,3.654,4.535], [-1.140,0.510,-6.800], [25.708,11.177,-7.636]]),
                (140, [[-2.010,-129.090,875.920], [14.730,5.570,5.540], [2.300,-6.430,0.360], [-0.125,-0.052,0.610], [2.260,0.450,-6.450], [-9.558,-5.641,-11.064]]),
                (141, [[5.710,-128.310,873.450], [4.220,-3.800,-6.920], [-2.330,-6.100,1.930], [2.164,5.385,11.940], [-5.490,0.890,-3.830], [-2.213,3.029,6.346]]),
                (142, [[3.860,-133.450,867.510], [-1.780,-5.980,-7.590], [4.850,-4.160,2.140], [-1.212,-0.038,0.485], [-4.520,-3.360,3.710], [1.372,-3.501,-3.702]]),
                (143, [[2.440,-139.690,858.800], [7.020,-5.190,-6.230], [0.110,-5.150,4.400], [-9.794,0.682,-0.575], [-5.060,-2.920,-3.280], [13.980,-10.928,-14.890]]),
                (144, [[11.980,-140.150,859.350], [17.700,2.250,-1.140], [0.950,-6.060,2.790], [0.609,0.320,-2.072], [-0.040,-2.820,-6.130], [-5.160,-2.552,0.169]]),
                (145, [[35.300,-132.990,854.910], [8.740,9.550,-15.220], [4.050,-5.230,-0.960], [4.495,5.245,-8.257], [-4.430,-2.650,-4.200], [-11.524,-6.153,10.428]]),
                (146, [[29.930,-128.550,843.920], [-12.950,5.120,-19.360], [3.680,-4.210,-3.570], [4.216,-1.235,4.901], [-4.190,-4.930,1.490], [-3.337,2.233,-3.694]]),
                (147, [[9.390,-125.790,820.060], [-27.750,1.440,5.840], [-0.470,-6.580,-0.630], [-1.149,-0.046,2.947], [1.320,-0.720,6.460], [29.727,5.129,-5.167]]),
                (148, [[4.650,-126.740,840.920], [-6.020,1.180,15.730], [0.130,-6.590,0.550], [0.672,-0.133,2.692], [6.110,0.310,2.320], [1.491,-0.702,5.385]]),
                (149, [[0.040,-125.010,849.260], [-9.240,1.850,1.000], [-1.260,-6.450,0.320], [3.007,-0.828,-3.290], [0.750,0.180,6.550], [-17.226,2.745,6.719]]),
                (150, [[-4.440,-124.790,843.150], [-5.020,0.460,-16.660], [1.260,-6.430,-0.560], [1.526,0.345,-1.410], [-6.090,-1.340,1.790], [3.263,2.133,-2.140]]),
                (151, [[-4.100,-124.240,817.800], [-14.820,-5.980,-12.690], [2.230,-6.130,0.290], [2.950,1.248,0.296], [-3.880,-1.170,5.070], [15.969,6.693,19.684]]),
                (152, [[-13.820,-128.400,823.840], [-7.490,-1.580,13.510], [1.550,-6.330,0.120], [-0.375,0.093,2.786], [5.490,1.400,3.200], [0.071,0.009,-2.397]]),
                (153, [[-15.540,-126.400,839.810], [-2.260,3.630,12.780], [1.060,-6.110,1.920], [-0.733,0.588,2.845], [6.210,1.310,0.730], [0.547,-1.738,0.544]]),
                (154, [[-17.860,-122.190,848.910], [-6.970,2.290,6.400], [-1.900,-6.170,0.140], [2.518,-2.631,-10.597], [4.060,-1.150,4.850], [6.144,-0.800,-1.813]]),
                (155, [[-24.460,-122.950,849.040], [-11.050,-2.260,-14.690], [1.030,-6.350,0.200], [-4.509,-0.725,-2.338], [-5.050,-0.700,3.900], [-1.635,-0.409,-21.248]]),
                (156, [[-23.980,-124.710,821.700], [-13.900,-3.450,-17.210], [-1.090,-5.980,2.080], [2.397,1.163,6.957], [-4.880,2.110,3.530], [4.710,1.060,13.998]]),
                (157, [[-38.600,-127.220,820.180], [-12.580,-0.430,8.780], [-0.020,-6.390,-0.330], [-3.183,0.117,2.545], [3.670,-0.290,5.240], [5.713,-1.638,-6.109]]),
                (158, [[-42.520,-125.650,832.780], [1.330,2.910,14.250], [-1.250,-6.100,1.370], [0.444,0.446,1.951], [6.110,-1.310,-0.300], [-0.876,-0.272,-5.030]]),
                (159, [[-35.800,-121.920,845.730], [4.200,3.780,10.200], [0.010,-5.960,2.200], [0.252,0.325,0.957], [5.880,-0.780,-2.130], [1.731,1.042,2.595]]),
                (160, [[-33.620,-118.720,852.840], [0.500,3.010,6.470], [-0.930,-5.650,2.700], [-0.816,0.074,-0.236], [6.150,-1.010,0.000], [-0.075,-0.236,2.323]]),
                (161, [[-34.440,-116.110,858.280], [-2.640,1.810,5.040], [-1.710,-5.940,1.230], [1.041,-0.940,-2.690], [5.320,-0.890,3.110], [-1.212,0.013,2.099]]),
                (162, [[-38.380,-115.330,862.170], [-6.050,-0.340,2.350], [0.220,-6.280,-0.340], [1.933,-0.058,-2.183], [2.280,-0.240,5.850], [6.752,2.394,-2.027]]),
                (163, [[-44.500,-116.930,861.580], [-11.590,-3.810,-10.160], [1.110,-6.090,1.020], [-2.287,-0.774,-2.644], [-4.130,0.030,4.700], [-2.430,-1.257,-13.675]]),
                (164, [[-51.780,-120.720,839.030], [-15.880,-5.450,-10.360], [1.830,-5.970,0.320], [1.726,0.695,0.364], [-3.220,-0.700,5.310], [10.312,3.415,11.575]]),
                (165, [[-64.650,-124.350,841.480], [-11.510,0.420,9.850], [0.150,-6.190,0.440], [-5.148,0.417,4.417], [3.970,0.430,4.630], [0.386,-0.757,-0.992]]),
                (166, [[-69.370,-119.950,854.330], [5.110,4.210,16.620], [-1.330,-5.740,1.870], [-5.711,1.722,-3.886], [5.670,-1.740,-1.310], [-5.349,1.091,-11.554]]),
                (167, [[-55.630,-118.570,867.170], [8.190,15.700,8.570], [-2.415,-2.636,3.160], [-0.593,7.929,2.345], [4.280,-1.310,-1.700], [4.506,2.922,4.829]]),
                (168, [[-52.380,-100.900,869.760], [4.760,24.010,12.610], [-3.169,0.219,3.447], [0.274,0.226,-0.278], [4.600,-0.510,-0.770], [-0.954,-5.121,0.109]]),
                (169, [[-41.730,-76.290,892.900], [-14.020,14.240,19.650], [-3.750,-3.589,-1.622], [11.087,-6.554,-16.336], [1.930,-2.620,3.270], [-4.486,2.001,4.180]]),
                (170, [[-60.630,-80.530,895.250], [-6.170,-10.100,-5.870], [2.660,0.730,-4.050], [3.060,0.318,0.187], [3.310,-2.970,1.640], [2.984,3.768,0.487]]), # cecum
                (171, [[-68.640,-93.290,888.060], [-9.850,-15.420,-8.510], [3.880,1.200,-6.660], [0.638,0.078,-1.313], [2.820,-2.460,1.200], [-0.281,0.240,-0.174]]),
                (172, [[-80.390,-111.370,878.290], [[-7.790,-0.980,12.360],[-13.650,-20.740,-11.030]], [[20.720,-4.040,12.540],[3.965,0.929,-6.653]], [[1.446,0.759,0.915],[-0.356,-0.445,1.425]], [[2.470,23.830,3.610],[2.749,-2.494,1.292]], [[2.800,2.295,-5.761],[0.151,-0.282,0.369]]]),
                (173, [[-71.690,-109.000,866.040], [-9.550,-3.730,12.060], [17.410,-4.850,11.460], [4.002,0.339,2.903], [0.820,19.940,7.200], [-2.655,3.885,2.419]]),
                (174, [[-87.210,-111.060,890.540], [-4.750,0.410,12.390], [23.270,-3.130,7.880], [3.919,0.039,-10.062], [3.090,24.460,0.450], [-0.534,0.634,-0.103]]), # colon
                (175, [[-89.990,-110.570,902.650], [-2.050,0.530,12.720], [24.710,-3.280,4.130], [-0.258,0.295,-0.771], [3.420,25.000,-0.640], [-0.165,-0.414,-0.223]]),
                (176, [[-91.250,-110.010,915.920], [-0.550,0.530,13.390], [23.610,-2.820,1.080], [-1.477,0.546,-3.864], [2.850,23.610,-0.910], [-0.676,-1.576,0.175]]),
                (177, [[-91.080,-109.520,929.390], [0.130,0.650,13.470], [21.830,-2.100,-0.100], [-0.494,0.434,2.767], [2.080,21.810,-1.180], [-0.280,-0.572,-1.018]]),
                (178, [[-91.000,-108.720,942.850], [0.830,0.670,13.370], [22.560,-2.350,-1.280], [-0.812,0.212,-3.084], [2.290,22.560,-1.420], [-0.343,-0.655,0.494]]),
                (179, [[-89.430,-108.180,956.080], [2.810,0.320,13.110], [20.050,-1.510,-4.270], [-3.677,0.667,-7.504], [1.380,20.440,-0.860], [-0.410,-1.753,1.306]]),
                (180, [[-85.390,-108.090,968.920], [3.100,0.440,13.080], [18.600,-0.990,-4.380], [1.034,0.474,7.167], [0.820,19.040,-0.910], [-0.804,-0.906,-1.713]]),
                (181, [[-83.240,-107.300,982.140], [2.050,0.850,13.230], [18.550,-0.800,-2.820], [-0.366,0.000,-0.265], [0.620,18.710,-1.440], [-0.007,-0.279,0.741]]),
                (182, [[-81.290,-106.400,995.370], [2.320,1.340,13.290], [18.150,-0.790,-3.100], [-0.287,-0.230,-2.444], [0.470,18.290,-2.130], [-1.548,-1.175,-5.566]]),
                (183, [[-78.600,-104.620,1008.650], [2.140,-1.500,13.270], [18.840,-0.250,-3.070], [0.089,1.905,8.150], [0.840,18.750,3.430], [1.530,-2.195,12.477]]),
                (184, [[-77.170,-109.180,1020.820], [4.070,-9.070,9.680], [16.310,3.440,-3.630], [-3.536,9.302,-3.893], [-0.010,12.030,12.600], [1.552,-14.471,12.449]]),
                (185, [[-71.190,-121.030,1025.580], [7.480,-11.420,0.490], [14.200,9.260,-1.140], [-4.138,6.704,4.050], [0.000,1.980,17.640], [4.009,-14.056,1.388]]),
                (186, [[-63.350,-130.560,1022.180], [7.990,-9.440,-3.400], [13.310,9.970,3.600], [0.746,-1.500,1.495], [0.000,-5.470,16.790], [-5.971,2.761,1.758]]),
                (187, [[-55.270,-139.840,1018.800], [8.880,-8.590,-3.550], [12.320,10.870,4.490], [-2.873,2.652,1.606], [0.000,-6.180,16.540], [1.312,-1.908,-0.749]]),
                (188, [[-45.660,-147.660,1015.100], [9.900,-7.390,-3.360], [10.810,11.990,5.470], [0.157,0.153,-0.684], [-0.010,-6.690,16.290], [-0.051,0.505,0.244]]),
                (189, [[-35.520,-154.600,1012.080], [11.080,-6.080,-1.980], [8.540,14.060,4.580], [-5.630,3.154,0.736], [-0.010,-5.000,17.000], [-4.606,2.713,0.623]]),
                (190, [[-23.710,-159.680,1011.200], [11.970,-4.320,-1.790], [6.200,14.650,6.070], [1.381,-1.545,2.616], [0.010,-6.170,16.490], [5.901,-4.758,-1.830]]),
                (191, [[-11.720,-163.200,1008.530], [12.260,-2.580,-2.060], [4.480,13.030,10.390], [-4.114,0.067,1.972], [-0.010,-10.220,14.200], [-1.246,-0.918,-0.617]]),
                (192, [[0.670,-164.820,1007.100], [12.710,-0.730,-0.480], [1.180,14.350,9.430], [-2.744,0.807,-0.990], [-0.010,-8.950,15.090], [-0.155,1.044,0.667]]),
                (193, [[13.556,-164.739,1007.051], [12.750,0.980,0.850], [-1.700,14.800,8.530], [-4.509,0.180,-1.398], [-0.320,-8.140,15.580], [-0.657,1.059,0.602]]),
                (194, [[26.116,-162.906,1008.217], [12.630,1.810,1.230], [-2.890,15.320,7.020], [4.217,0.661,-0.535], [-0.450,-6.810,16.270], [-1.799,0.759,0.281]]),
                (195, [[38.730,-161.010,1010.040], [11.760,4.530,2.770], [-6.960,14.450,5.880], [-10.386,-4.824,-4.667], [-0.980,-6.490,16.380], [0.630,3.041,1.542]]),
                (196, [[50.563,-154.087,1013.645], [9.860,7.100,4.160], [-9.105,10.240,0.863], [-1.519,-3.094,-3.154], [-4.770,-2.540,17.360], [-2.844,-0.118,-0.520]]),
                (197, [[58.745,-146.870,1017.469], [9.340,7.750,4.350], [-9.097,10.778,0.486], [0.773,1.061,0.375], [-3.670,-4.330,17.260], [0.471,-2.385,0.021]]),
                (198, [[67.501,-138.309,1022.249], [7.990,8.770,4.670], [-10.568,9.341,0.117], [-0.892,0.319,0.230], [-2.610,-6.250,17.940], [-0.727,-1.691,-1.174]]),
                (199, [[74.433,-129.298,1027.145], [5.080,9.970,3.830], [-13.880,7.949,-1.165], [-5.597,-8.565,-3.760], [-2.126,-4.930,16.625], [2.413,-2.866,-0.507]]),
                (200, [[77.560,-119.250,1030.430], [5.040,10.780,-0.510], [-14.630,6.980,2.780], [1.560,11.525,0.189], [4.280,1.140,20.240], [5.033,13.738,0.394]]),
                (201, [[83.860,-109.530,1026.210], [6.930,6.510,-9.450], [-16.870,11.640,-4.350], [0.651,2.120,-10.173], [7.220,14.780,13.520], [12.245,15.969,-24.210]]),
                (202, [[89.550,-108.420,1013.560], [3.910,0.860,-13.160], [-20.290,9.170,-5.430], [-3.775,-1.031,9.091], [8.380,20.860,4.280], [-3.488,2.883,3.149]]),
                (203, [[91.640,-107.830,1000.370], [1.780,0.550,-13.270], [-20.930,7.770,-2.480], [-0.463,-1.201,-1.562], [7.590,21.030,2.070], [-1.075,0.463,0.762]]),
                (204, [[93.100,-107.330,987.040], [1.010,0.300,-13.420], [-22.050,6.680,-1.510], [-0.548,-0.786,0.600], [6.630,22.100,1.090], [-0.357,0.488,-3.312]]),
                (205, [[93.660,-107.240,973.550], [-0.020,1.050,-13.410], [-22.120,6.280,0.520], [0.741,-2.670,4.382], [6.310,22.050,1.910], [-2.307,-1.136,5.486]]),
                (206, [[93.060,-105.250,960.320], [-0.770,2.250,-13.200], [-20.310,1.700,1.470], [1.130,-2.592,0.407], [1.920,20.030,3.650], [-2.686,-0.977,-0.300]]),
                (207, [[92.120,-102.740,947.160], [-0.420,2.820,-13.160], [-20.350,1.100,0.880], [0.649,0.265,-2.711], [1.250,19.860,4.690], [-0.170,-1.712,3.293]]),
                (208, [[92.230,-99.620,934.040], [0.470,1.780,-13.240], [-18.820,1.460,-0.470], [1.015,-0.009,-1.123], [1.390,18.640,2.850], [0.156,0.097,-6.486]]),
                (209, [[93.040,-99.170,920.860], [1.210,-0.740,-13.330], [-18.310,1.150,-1.730], [1.032,-1.406,-4.853], [1.230,18.350,-1.000], [-0.116,-0.658,-5.019]]),
                (210, [[94.650,-101.120,907.560], [-0.610,-1.620,-13.470], [-18.270,0.060,0.820], [-0.296,-0.527,11.591], [-0.050,18.160,-2.300], [-2.267,1.211,4.241]]),
                (211, [[91.840,-102.350,894.350], [-3.470,-1.640,-11.950], [-18.620,-2.390,5.740], [0.050,-2.834,1.166], [-3.000,19.300,-1.810], [-4.279,0.930,-2.570]]),
                (212, [[87.880,-104.310,883.750], [-5.210,-2.130,-10.320], [-16.280,-4.940,9.250], [3.897,-2.938,4.652], [-6.690,20.720,-1.110], [-1.100,0.162,2.843]]),
                (213, [[81.450,-106.590,873.900], [-6.990,-2.140,-9.270], [-12.430,-8.970,11.450], [2.585,-1.265,2.150], [-6.303,19.245,1.555], [-2.478,-1.715,-0.527]]),
                (214, [[73.980,-108.570,865.270], [-8.310,-0.220,-8.520], [-12.268,-8.435,13.125], [-3.393,1.170,-1.886], [-6.633,18.953,4.087], [6.641,0.821,8.792]]),
                (215, [[65.060,-106.920,857.150], [-8.970,1.810,-7.690], [-14.794,-6.343,11.919], [-1.492,1.271,-0.898], [-4.396,19.311,7.084], [0.625,-0.743,-1.466]]),
                (216, [[56.070,-104.970,849.910], [-10.000,1.920,-6.880], [-14.078,-6.138,12.772], [4.461,1.866,6.127], [0.172,16.517,6.181], [-0.094,0.857,-4.674]]),
                (217, [[45.110,-103.120,843.530], [-11.000,4.810,-5.260], [-9.460,-1.100,18.780], [4.911,2.529,4.250], [6.930,18.410,4.840], [16.136,-5.938,3.532]]),
                (218, [[34.860,-95.590,839.810], [-9.590,8.680,-2.670], [-6.610,-0.760,21.270], [3.230,-2.518,0.984], [12.620,13.250,3.920], [2.559,-3.070,0.348]]),
                (219, [[26.140,-85.990,838.230], [-8.260,10.160,-2.000], [-7.290,-2.000,20.040], [-3.160,3.716,-1.448], [14.710,10.710,6.320], [1.983,-2.626,1.679]]),
                (220, [[18.390,-75.310,835.820], [-8.420,10.080,-2.660], [-7.370,-0.990,19.530], [1.170,-1.422,1.352], [16.030,10.170,6.780], [-1.666,6.081,-0.406]]),
                (221, [[9.350,-65.880,832.920], [-11.900,13.240,-4.280], [-8.470,-0.620,21.630], [-1.482,1.281,0.711], [17.760,11.500,7.330], [2.466,-1.981,0.786]]),
                (222, [[-5.120,-48.680,827.110], [-17.030,21.160,-7.340], [-8.980,0.200,21.430], [1.268,-0.666,-0.724], [17.760,11.500,7.330], [-2.935,3.194,-1.001]])
                ]] ),

            'userAnnotationGroups': [
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '1-4',
                    'name': get_esophagus_term('esophagus')[0],
                    'ontId': get_esophagus_term('esophagus')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '1',
                    'name': get_esophagus_term('cervical part of esophagus')[0],
                    'ontId': get_esophagus_term('cervical part of esophagus')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '2-3',
                    'name': get_esophagus_term('thoracic part of esophagus')[0],
                    'ontId': get_esophagus_term('thoracic part of esophagus')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '4',
                    'name': get_esophagus_term('abdominal part of esophagus')[0],
                    'ontId': get_esophagus_term('abdominal part of esophagus')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '5-18',
                    'name': get_stomach_term('stomach')[0],
                    'ontId': get_stomach_term('stomach')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '5-6',
                    'name': get_stomach_term('esophagus part of stomach')[0],
                    'ontId': get_stomach_term('esophagus part of stomach')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '7-10',
                    'name': get_stomach_term('fundus of stomach')[0],
                    'ontId': get_stomach_term('fundus of stomach')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '11-14',
                    'name': get_stomach_term('body of stomach')[0],
                    'ontId': get_stomach_term('body of stomach')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '15-16',
                    'name': get_stomach_term('pyloric antrum')[0],
                    'ontId': get_stomach_term('pyloric antrum')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '17',
                    'name': get_stomach_term('pyloric canal')[0],
                    'ontId': get_stomach_term('pyloric canal')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '18',
                    'name': get_stomach_term('duodenum part of stomach')[0],
                    'ontId': get_stomach_term('duodenum part of stomach')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '19-169',
                    'name': get_smallintestine_term('small intestine')[0],
                    'ontId': get_smallintestine_term('small intestine')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '19-23',
                    'name': get_smallintestine_term('duodenum')[0],
                    'ontId': get_smallintestine_term('duodenum')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '24-100',
                    'name': get_smallintestine_term('jejunum')[0],
                    'ontId': get_smallintestine_term('jejunum')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '101-169',
                    'name': get_smallintestine_term('ileum')[0],
                    'ontId': get_smallintestine_term('ileum')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '170-173',
                    'name': get_cecum_term('caecum')[0],
                    'ontId': get_cecum_term('caecum')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '170-171',
                    'name': get_cecum_term('ileum part of cecum')[0],
                    'ontId': get_cecum_term('ileum part of cecum')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '174-221',
                    'name': get_colon_term('colon')[0],
                    'ontId': get_colon_term('colon')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '174-184',
                    'name': get_colon_term('ascending colon')[0],
                    'ontId': get_colon_term('ascending colon')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '185-199',
                    'name': get_colon_term('transverse colon')[0],
                    'ontId': get_colon_term('transverse colon')[1]
                },
                {
                    '_AnnotationGroup': True,
                    'dimension': 1,
                    'identifierRanges': '200-222',
                    'name': get_colon_term('descending colon')[0],
                    'ontId': get_colon_term('descending colon')[1]
                }]
            })


class MeshType_3d_gastrointestinaltract1(Scaffold_base):
    '''
    Generates a 3-D gastrointestinal tract mesh with variable numbers of elements around, along the central line,
    and through wall. The tract is created by following an annotated network layout and calling scaffold function to
    generate the respective segment along the central line profile.
    '''

    @staticmethod
    def getName():
        return '3D Gastrointestinal Tract 1'

    @staticmethod
    def getParameterSetNames():
        return [
            'Default',
            'Human 1']

    @classmethod
    def getDefaultOptions(cls, parameterSetName='Default'):
        esophagusOption = ScaffoldPackage(MeshType_3d_esophagus1, defaultParameterSetName='Human 1')
        stomachOption = ScaffoldPackage(MeshType_3d_stomach1, defaultParameterSetName='Human 2')
        smallIntestineOption = ScaffoldPackage(MeshType_3d_smallintestine1, defaultParameterSetName='Human 1')
        cecumOption = ScaffoldPackage(MeshType_3d_cecum1, defaultParameterSetName='Human 2')
        colonOption = ScaffoldPackage(MeshType_3d_colon1, defaultParameterSetName='Human 3')
        options = {'Network layout': getDefaultNetworkLayoutScaffoldPackage(cls, parameterSetName),
                   'Esophagus': esophagusOption,
                   'Stomach': stomachOption,
                   'Small intestine': smallIntestineOption,
                   'Cecum': cecumOption,
                   'Colon': colonOption,
                   'Use linear through wall': True,
                   'Refine': False,
                   'Refine number of elements surface': 4,
                   'Refine number of elements through wall': 1
                   }

        return options

    @staticmethod
    def getOrderedOptionNames():
        return [
            'Network layout',
            'Esophagus',
            'Stomach',
            'Small intestine',
            'Cecum',
            'Colon',
            'Use linear through wall',
            'Refine',
            'Refine number of elements surface',
            'Refine number of elements through wall']

    @classmethod
    def getOptionValidScaffoldTypes(cls, optionName):
        if optionName == 'Network layout':
            return [MeshType_1d_network_layout1]
        if optionName == 'Esophagus':
            return [MeshType_3d_esophagus1]
        if optionName == 'Stomach':
            return [MeshType_3d_stomach1]
        if optionName == 'Small intestine':
            return [MeshType_3d_smallintestine1]
        if optionName == 'Cecum':
            return [MeshType_3d_cecum1]
        if optionName == 'Colon':
            return [MeshType_3d_colon1]
        return []

    @classmethod
    def getOptionScaffoldTypeParameterSetNames(cls, optionName, scaffoldType):
        if optionName == 'Network layout':
            return cls.getParameterSetNames()
        assert scaffoldType in cls.getOptionValidScaffoldTypes(optionName), \
            cls.__name__ + '.getOptionScaffoldTypeParameterSetNames.  ' + \
            'Invalid option \'' + optionName + '\' scaffold type ' + scaffoldType.getName()
        return scaffoldType.getParameterSetNames()

    @classmethod
    def getOptionScaffoldPackage(cls, optionName, scaffoldType, parameterSetName=None):
        '''
        :param parameterSetName:  Name of valid parameter set for option Scaffold, or None for default.
        :return: ScaffoldPackage.
        '''
        if parameterSetName:
            assert parameterSetName in cls.getOptionScaffoldTypeParameterSetNames(optionName, scaffoldType), \
                'Invalid parameter set ' + str(parameterSetName) + ' for scaffold ' + str(scaffoldType.getName()) + \
                ' in option ' + str(optionName) + ' of scaffold ' + cls.getName()
        if optionName == 'Network layout':
            if not parameterSetName:
                parameterSetName = "Default"
            return getDefaultNetworkLayoutScaffoldPackage(cls, parameterSetName)
        if optionName == 'Esophagus':
            if not parameterSetName:
                parameterSetName = scaffoldType.getParameterSetNames()[0]
            return ScaffoldPackage(scaffoldType, defaultParameterSetName=parameterSetName)
        if optionName == 'Stomach':
            if not parameterSetName:
                parameterSetName = scaffoldType.getParameterSetNames()[0]
            return ScaffoldPackage(scaffoldType, defaultParameterSetName=parameterSetName)
        if optionName == 'Small intestine':
            if not parameterSetName:
                parameterSetName = scaffoldType.getParameterSetNames()[0]
            return ScaffoldPackage(scaffoldType, defaultParameterSetName=parameterSetName)
        if optionName == 'Cecum':
            if not parameterSetName:
                parameterSetName = scaffoldType.getParameterSetNames()[0]
            return ScaffoldPackage(scaffoldType, defaultParameterSetName=parameterSetName)
        if optionName == 'Colon':
            if not parameterSetName:
                parameterSetName = scaffoldType.getParameterSetNames()[0]
            return ScaffoldPackage(scaffoldType, defaultParameterSetName=parameterSetName)
        assert False, cls.__name__ + '.getOptionScaffoldPackage:  Option ' + optionName + ' is not a scaffold'

    @classmethod
    def checkOptions(cls, options):
        if not options['Network layout'].getScaffoldType() in cls.getOptionValidScaffoldTypes('Network layout'):
            options['Network layout'] = cls.getOptionScaffoldPackage('Network layout', MeshType_1d_network_layout1)
        if not options['Esophagus'].getScaffoldType() in cls.getOptionValidScaffoldTypes('Esophagus'):
            options['Esophagus'] = cls.getOptionScaffoldPackage('Esophagus', MeshType_3d_esophagus1)
        if not options['Stomach'].getScaffoldType() in cls.getOptionValidScaffoldTypes('Stomach'):
            options['Stomach'] = cls.getOptionScaffoldPackage('Stomach', MeshType_3d_stomach1)
        if not options['Small intestine'].getScaffoldType() in cls.getOptionValidScaffoldTypes('Small intestine'):
            options['Small intestine'] = cls.getOptionScaffoldPackage('Small intestine', MeshType_3d_smallintestine1)
        if not options['Cecum'].getScaffoldType() in cls.getOptionValidScaffoldTypes('Cecum'):
            options['Cecum'] = cls.getOptionScaffoldPackage('Cecum', MeshType_3d_cecum1)
        if not options['Colon'].getScaffoldType() in cls.getOptionValidScaffoldTypes('Colon'):
            options['Colon'] = cls.getOptionScaffoldPackage('Colon', MeshType_3d_colon1)
        for key in [
            'Refine number of elements surface',
            'Refine number of elements through wall']:
            if options[key] < 1:
                options[key] = 1
        cls.updateSubScaffoldOptions(options)

        
    @classmethod
    def updateSubScaffoldOptions(cls, options):
        '''
        Update sub-scaffold options which depend on parent options.
        '''
        esoOptions = options['Esophagus']
        esoSettings = esoOptions.getScaffoldSettings()
        esoSettings['Number of elements through wall'] = 1
        stomachOptions = options['Stomach']
        stomachSettings = stomachOptions.getScaffoldSettings()
        stomachSettings['Number of elements through wall'] = 1
        smallIntestineOptions = options['Small intestine']
        smallIntestineSettings = smallIntestineOptions.getScaffoldSettings()
        smallIntestineSettings['Number of elements through wall'] = 1
        cecumOptions = options['Cecum']
        cecumSettings = cecumOptions.getScaffoldSettings()
        cecumSettings['Number of elements through wall'] = 1
        colonOptions = options['Colon']
        colonSettings = colonOptions.getScaffoldSettings()
        colonSegmentOptions = colonSettings['Segment profile']
        colonSegmentSettings = colonSegmentOptions.getScaffoldSettings()
        colonSegmentSettings['Number of elements through wall'] = 1


    @classmethod
    def generateBaseMesh(cls, region, options):
        """
        Generate the base tricubic Hermite mesh.
        :param region: Zinc region to define model in. Must be empty.
        :param options: Dict containing options. See getDefaultOptions().
        :return: annotationGroups
        """
        cls.updateSubScaffoldOptions(options)
        networkLayout = options['Network layout']
        esophagusOptions = options['Esophagus']
        stomachOptions = options['Stomach']
        smallIntestineOptions = options['Small intestine']
        cecumOptions = options['Cecum']
        colonOptions = options['Colon']
        esophagusSettings = esophagusOptions.getScaffoldSettings()
        stomachSettings = stomachOptions.getScaffoldSettings()
        smallIntestineSettings = smallIntestineOptions.getScaffoldSettings()
        cecumSettings = cecumOptions.getScaffoldSettings()
        colonSettings = colonOptions.getScaffoldSettings()

        esophagusSettings['Use linear through wall'] = options['Use linear through wall']
        stomachSettings['Use linear through wall'] = options['Use linear through wall']
        smallIntestineSettings['Use linear through wall'] = options['Use linear through wall']
        cecumSettings['Use linear through wall'] = options['Use linear through wall']
        colonSettings['Use linear through wall'] = options['Use linear through wall']

        nextNodeIdentifier = 1
        nextElementIdentifier = 1

        tmpRegion = region.createRegion()
        networkLayout.generate(tmpRegion)

        # Network layout
        gastroTermsAlong = [['esophagus', 'cervical part of esophagus', 'thoracic part of esophagus',
                             'abdominal part of esophagus'],
                            ['stomach', 'fundus of stomach', 'body of stomach', 'pyloric antrum', 'pyloric canal',
                             'duodenum part of stomach', 'esophagus part of stomach'],
                            ['small intestine', 'duodenum', 'jejunum', 'ileum'],
                            ['caecum', 'ileum part of cecum'],
                            ['colon', 'ascending colon', 'transverse colon', 'descending colon']]

        for section in range(len(gastroTermsAlong)):
            fm = region.getFieldmodule()
            coordinates = findOrCreateFieldCoordinates(fm)
            allAnnotationGroups = []

            if gastroTermsAlong[section][0] == 'esophagus':
                esoNetworkLayout = EsophagusNetworkLayout(region, networkLayout, gastroTermsAlong[section])
                annotationGroupsEsophagus, nextNodeIdentifier, nextElementIdentifier, nodesIdEsoDistal,\
                xEsoDistal, d1EsoDistal, d2EsoDistal, d3EsoDistal = \
                    createEsophagusMesh3d(region, esophagusSettings, esoNetworkLayout, nextNodeIdentifier,
                                          nextElementIdentifier)

            elif gastroTermsAlong[section][0] == 'stomach':
                stomachNetworkLayout = StomachNetworkLayout(region, networkLayout, gastroTermsAlong[section],
                                                            esoSegmentIdx=0, stomachSegmentIdx=[1,2])
                annotationGroupsStomach, nextNodeIdentifier, nextElementIdentifier, _, nodesIdStomachDistal,\
                xStomachDistal, d1StomachDistal, d2StomachDistal, d3StomachDistal, arclengthCPStomachDistal, xPrev, \
                d2Prev = \
                    createStomachMesh3d(region, fm, coordinates, gastroTermsAlong[section],
                                        allAnnotationGroups, stomachNetworkLayout,
                                        options=stomachSettings, nodeIdentifier=nextNodeIdentifier,
                                        elementIdentifier=nextElementIdentifier,
                                        nodeIdProximalEso=nodesIdEsoDistal, xProximalEso=xEsoDistal,
                                        d1ProximalEso=d1EsoDistal, d2ProximalEso=d2EsoDistal, d3ProximalEso=d3EsoDistal)
                nearLCGroup = getAnnotationGroupForTerm(annotationGroupsStomach,
                                                        ("elements adjacent to lesser curvature", "None"))
                annotationGroupsStomach.remove(nearLCGroup)

            elif gastroTermsAlong[section][0] == 'small intestine':
                smallIntestineNetworkLayout = SmallIntestineNetworkLayout(region, networkLayout,
                                                                          gastroTermsAlong[section])

                annotationGroupsSmallIntestine, nextNodeIdentifier, nextElementIdentifier, \
                nodesIdSmallIntestineDistal, xSmallIntestineDistal, d1SmallIntestineDistal, d2SmallIntestineDistal, \
                d3SmallIntestineDistal, xNext, d2Next = \
                    createSmallIntestineMesh3d(region, smallIntestineSettings, smallIntestineNetworkLayout,
                                               nextNodeIdentifier, nextElementIdentifier,
                                               nodeIdProximal=nodesIdStomachDistal, xProximal=xStomachDistal,
                                               d1Proximal=d1StomachDistal, d2Proximal=d2StomachDistal,
                                               d3Proximal=d3StomachDistal, arclengthCPProximal=arclengthCPStomachDistal)

                # Smooth d2 at intersection between stomach and small intestine
                cache = fm.createFieldcache()
                nodes = fm.findNodesetByFieldDomainType(Field.DOMAIN_TYPE_NODES)
                for n3 in range(len(nodesIdStomachDistal)):
                    for n in range(len(nodesIdStomachDistal[n3])):
                        newD2 = interp.smoothCubicHermiteDerivativesLine(
                            [xPrev[n3][n], xStomachDistal[n3][n], xNext[n3][n]],
                            [d2Prev[n3][n], d2StomachDistal[n3][n], d2Next[n3][n]],
                            fixStartDerivative=True, fixEndDerivative=True)[1]

                        cache.setNode(nodes.findNodeByIdentifier(nodesIdStomachDistal[n3][n]))
                        coordinates.setNodeParameters(cache, -1, Node.VALUE_LABEL_D_DS2, 1, newD2)

            elif gastroTermsAlong[section][0] == 'caecum':
                cecumNetworkLayout = CecumNetworkLayout(region, networkLayout, gastroTermsAlong[section],
                                                    ileumSegmentIdx=2, cecumSegmentIdx=[3,4])
                annotationGroupsCecum, nextNodeIdentifier, nextElementIdentifier, nodesIdCecumDistal, \
                xCecumDistal, d1CecumDistal, d2CecumDistal, d3CecumDistal = \
                    createCecumMesh3d(region, cecumSettings, cecumNetworkLayout, nextNodeIdentifier,
                                      nextElementIdentifier,  nodeIdProximalIleum=nodesIdSmallIntestineDistal,
                                      xProximalIleum=xSmallIntestineDistal, d1ProximalIleum=d1SmallIntestineDistal,
                                      d2ProximalIleum=d2SmallIntestineDistal, d3ProximalIleum=d3SmallIntestineDistal)

            elif gastroTermsAlong[section][0] == 'colon':
                colonNetworkLayout = ColonNetworkLayout(region, networkLayout, gastroTermsAlong[section])
                annotationGroupsColon, nextNodeIdentifier, nextElementIdentifier, \
                nodesIdColonDistal, xColonDistal, d1ColonDistal, d2ColonDistal, d3ColonDistal = \
                    createColonMesh3d(region, colonSettings, colonNetworkLayout, nextNodeIdentifier,
                                      nextElementIdentifier, nodeIdProximal=nodesIdCecumDistal,
                                      xProximal=xCecumDistal, d1Proximal=d1CecumDistal, d2Proximal=d2CecumDistal,
                                      d3Proximal=d3CecumDistal)

        del tmpRegion

        annotationGroups = mergeAnnotationGroups(annotationGroupsEsophagus, annotationGroupsStomach,
                                                 annotationGroupsSmallIntestine, annotationGroupsCecum,
                                                 annotationGroupsColon)

        return annotationGroups, None

    @classmethod
    def refineMesh(cls, meshrefinement, options):
        """
        Refine source mesh into separate region, with change of basis.
        :param meshrefinement: MeshRefinement, which knows source and target region.
        :param options: Dict containing options. See getDefaultOptions().
        """
        refineElementsCountAround = options['Refine number of elements surface']
        refineElementsCountAlong = options['Refine number of elements surface']
        refineElementsCountThroughWall = options['Refine number of elements through wall']

        meshrefinement.refineAllElementsCubeStandard3d(refineElementsCountAround, refineElementsCountAlong,
                                                       refineElementsCountThroughWall)
        return

class SectionNetworkLayout:
    """
    Generates sampled network layout for GI Tract scaffold.
    """
    def __init__(self, arcLengthOfGroupsAlong, cxGroups, cd1Groups, cd2Groups,cd3Groups, cd12Groups, cd13Groups):
        """
        :param region: Zinc region to define model in.
        :param networkLayout: Network layout subscaffold from meshtype_1d_networklayout1
        :param stomachTermsAlong: Annotation terms along length of network layout
        """
        self.arcLengthOfGroupsAlong = arcLengthOfGroupsAlong
        self.cxGroups = cxGroups
        self.cd1Groups = cd1Groups
        self.cd2Groups = cd2Groups
        self.cd3Groups = cd3Groups
        self.cd12Groups = cd12Groups
        self.cd13Groups = cd13Groups
